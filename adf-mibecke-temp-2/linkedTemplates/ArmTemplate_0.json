{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-mibecke-temp-2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DatabricksInstancePoolLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"workspaceUrl": {
						"type": "string"
					},
					"instancePoolId": {
						"type": "string"
					},
					"workspaceResourceId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "@linkedService().workspaceUrl",
					"authentication": "MSI",
					"workspaceResourceId": "@linkedService().workspaceResourceId",
					"instancePoolId": "@linkedService().instancePoolId",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "15.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SwitchInstancePoolOnCapacityFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "InitialNotebookRunAttempt",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.notebookPath",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "DatabricksInstancePoolLinkedService",
							"type": "LinkedServiceReference",
							"parameters": {
								"workspaceUrl": {
									"value": "@pipeline().parameters.workspaceUrl",
									"type": "Expression"
								},
								"instancePoolId": {
									"value": "@pipeline().parameters.initialInstancePoolId",
									"type": "Expression"
								},
								"workspaceResourceId": {
									"value": "@pipeline().parameters.workspaceResourceId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CheckAcceptableErrorStrings",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "InitialNotebookRunAttempt",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.acceptedErrorMessages",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Check if failure capacity related",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(activity('InitialNotebookRunAttempt').output.runError, item())",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "FailoverNotebookRunAttempt",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": {
														"value": "@pipeline().parameters.notebookPath",
														"type": "Expression"
													}
												},
												"linkedServiceName": {
													"referenceName": "DatabricksInstancePoolLinkedService",
													"type": "LinkedServiceReference",
													"parameters": {
														"workspaceUrl": {
															"value": "@pipeline().parameters.workspaceUrl",
															"type": "Expression"
														},
														"instancePoolId": {
															"value": "@pipeline().parameters.failoverInstancePoolId",
															"type": "Expression"
														},
														"workspaceResourceId": {
															"value": "@pipeline().parameters.workspaceResourceId",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "setFailoverConditionSatisfied",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "failoverConditionSatisfied",
													"value": true
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "FailIfFailoverDidntHappen",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckAcceptableErrorStrings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(variables('failoverConditionSatisfied'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "ERROR_NOT_CAPACITY_RELATED",
										"errorCode": "123"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"notebookPath": {
						"type": "string"
					},
					"workspaceUrl": {
						"type": "string"
					},
					"initialInstancePoolId": {
						"type": "string"
					},
					"failoverInstancePoolId": {
						"type": "string"
					},
					"workspaceResourceId": {
						"type": "string"
					},
					"acceptedErrorMessages": {
						"type": "array"
					}
				},
				"variables": {
					"exitLoop": {
						"type": "Boolean",
						"defaultValue": false
					},
					"iterationCount": {
						"type": "String",
						"defaultValue": "1"
					},
					"iterationCountInternal": {
						"type": "String",
						"defaultValue": "1"
					},
					"activeWorkspaceUrl": {
						"type": "String"
					},
					"activeInstancePoolId": {
						"type": "String"
					},
					"failoverWorkpaceUrl": {
						"type": "String"
					},
					"failoverInstancePoolId": {
						"type": "String"
					},
					"activeWorkspaceResourceId": {
						"type": "String"
					},
					"failoverWorkspaceResourceId": {
						"type": "String"
					},
					"maxIterations": {
						"type": "Integer",
						"defaultValue": 2
					},
					"ErrorMessages": {
						"type": "Array"
					},
					"FoundString": {
						"type": "Boolean"
					},
					"failoverConditionSatisfied": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "Helpers"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T16:52:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatabricksInstancePoolLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tryNonDdcrInstancePoolThenFallbackOnOdcrInstancePool')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SwitchInstancePoolOnCapacityFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"notebookPath": {
									"value": "@pipeline().globalParameters.notebookPath",
									"type": "Expression"
								},
								"workspaceUrl": {
									"value": "@pipeline().globalParameters.workspaceUrl",
									"type": "Expression"
								},
								"initialInstancePoolId": {
									"value": "@pipeline().globalParameters.nonOdcrInstancePoolId",
									"type": "Expression"
								},
								"failoverInstancePoolId": {
									"value": "@pipeline().globalParameters.odcrInstancePoolId",
									"type": "Expression"
								},
								"workspaceResourceId": {
									"value": "@pipeline().globalParameters.workspaceResourceId",
									"type": "Expression"
								},
								"acceptedErrorMessages": {
									"value": "@pipeline().parameters.acceptedErrorMessages",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SwitchInstancePoolOnCapacityFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"notebookPath": {
									"value": "@pipeline().globalParameters.notebookPath",
									"type": "Expression"
								},
								"workspaceUrl": {
									"value": "@pipeline().globalParameters.workspaceUrl",
									"type": "Expression"
								},
								"initialInstancePoolId": {
									"value": "@pipeline().globalParameters.nonOdcrInstancePoolId",
									"type": "Expression"
								},
								"failoverInstancePoolId": {
									"value": "@pipeline().globalParameters.odcrInstancePoolId",
									"type": "Expression"
								},
								"workspaceResourceId": {
									"value": "@pipeline().globalParameters.workspaceResourceId",
									"type": "Expression"
								},
								"acceptedErrorMessages": {
									"value": "@pipeline().parameters.acceptedErrorMessages",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"acceptedErrorMessages": {
						"type": "array",
						"defaultValue": [
							"AZURE_QUOTA_EXCEEDED_EXCEPTION",
							"INSTANCE_POOL_MAX_CAPACITY_REACHED"
						]
					}
				},
				"variables": {
					"failoverConditionSatisfied": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SwitchInstancePoolOnCapacityFailure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatabricksJobClusterLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"workspaceUrl": {
						"type": "string"
					},
					"workspaceResourceId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "@linkedService().workspaceUrl",
					"authentication": "MSI",
					"workspaceResourceId": "@linkedService().workspaceResourceId",
					"newClusterNodeType": "Standard_E80ids_v4",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "15.4.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SwitchLinkedServiceOnCapacityFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "InitialNotebookRunAttempt",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.notebookPath",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "DatabricksJobClusterLinkedService",
							"type": "LinkedServiceReference",
							"parameters": {
								"workspaceUrl": {
									"value": "@pipeline().parameters.workspaceUrl",
									"type": "Expression"
								},
								"workspaceResourceId": {
									"value": "@pipeline().parameters.workspaceResourceId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CheckAcceptableErrorStrings",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "InitialNotebookRunAttempt",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.acceptedErrorMessages",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Check if failure capacity related",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(activity('InitialNotebookRunAttempt').output.runError, item())",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "FailoverNotebookRunAttempt",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": {
														"value": "@pipeline().parameters.notebookPath",
														"type": "Expression"
													}
												},
												"linkedServiceName": {
													"referenceName": "DatabricksInstancePoolLinkedService",
													"type": "LinkedServiceReference",
													"parameters": {
														"workspaceUrl": {
															"value": "@pipeline().parameters.workspaceUrl",
															"type": "Expression"
														},
														"instancePoolId": {
															"value": "@pipeline().parameters.instancePoolId",
															"type": "Expression"
														},
														"workspaceResourceId": {
															"value": "@pipeline().parameters.workspaceResourceId",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "setFailoverConditionSatisfied",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "failoverConditionSatisfied",
													"value": true
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "FailIfFailoverDidntHappen",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckAcceptableErrorStrings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(variables('failoverConditionSatisfied'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "ERROR_NOT_CAPACITY_RELATED",
										"errorCode": "123"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"notebookPath": {
						"type": "string"
					},
					"workspaceUrl": {
						"type": "string"
					},
					"instancePoolId": {
						"type": "string"
					},
					"workspaceResourceId": {
						"type": "string"
					},
					"acceptedErrorMessages": {
						"type": "array"
					}
				},
				"variables": {
					"exitLoop": {
						"type": "Boolean",
						"defaultValue": false
					},
					"iterationCount": {
						"type": "String",
						"defaultValue": "1"
					},
					"iterationCountInternal": {
						"type": "String",
						"defaultValue": "1"
					},
					"activeWorkspaceUrl": {
						"type": "String"
					},
					"activeInstancePoolId": {
						"type": "String"
					},
					"failoverWorkpaceUrl": {
						"type": "String"
					},
					"failoverInstancePoolId": {
						"type": "String"
					},
					"activeWorkspaceResourceId": {
						"type": "String"
					},
					"failoverWorkspaceResourceId": {
						"type": "String"
					},
					"maxIterations": {
						"type": "Integer",
						"defaultValue": 2
					},
					"ErrorMessages": {
						"type": "Array"
					},
					"FoundString": {
						"type": "Boolean"
					},
					"failoverConditionSatisfied": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "Helpers"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T16:52:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatabricksJobClusterLinkedService')]",
				"[concat(variables('factoryId'), '/linkedServices/DatabricksInstancePoolLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tryJobPoolThenFallbackOnOdcrInstancePool')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SwitchLinkedServiceOnCapacityFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"notebookPath": {
									"value": "@pipeline().globalParameters.notebookPath",
									"type": "Expression"
								},
								"workspaceUrl": {
									"value": "@pipeline().globalParameters.workspaceUrl",
									"type": "Expression"
								},
								"instancePoolId": {
									"value": "@pipeline().globalParameters.odcrInstancePoolId",
									"type": "Expression"
								},
								"workspaceResourceId": {
									"value": "@pipeline().globalParameters.workspaceResourceId",
									"type": "Expression"
								},
								"acceptedErrorMessages": {
									"value": "@pipeline().parameters.acceptedErrorMessages",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"acceptedErrorMessages": {
						"type": "string",
						"defaultValue": [
							"AZURE_QUOTA_EXCEEDED_EXCEPTION",
							"INSTANCE_POOL_MAX_CAPACITY_REACHED"
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SwitchLinkedServiceOnCapacityFailure')]"
			]
		}
	]
}